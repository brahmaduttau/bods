openapi: 3.0.0
info:
  title: CAVL Config API
  description: Used to configure feed consumers in the CAVL Service
  contact:
    email: greg.brown@itoworld.com
  version: 0.1.0
servers:
  - url: https://cavl.api.itoworld.com/v0
    description: CAVL Config API
paths:
  /feed:
    get:
      tags:
        - feed
      summary: Gets a list of feeds
      operationId: get_feeds
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Feed"
                x-content-type: application/json
        "5XX":
          description: Unexpected error.
      x-openapi-router-controller: cavl_server.controllers.feed_controller
    post:
      tags:
        - feed
      summary: Adds a new feed
      operationId: add_feed
      requestBody:
        $ref: "#/components/requestBodies/Feed"
      responses:
        "201":
          description: The feed was created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_201"
          links:
            GetFeedById:
              operationRef: getFeed
              parameters:
                feedId: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the  `feedId` parameter in `GET /feed/{feedId}`
            UpdateFeed:
              operationRef: updateFeed
              parameters:
                feedId: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the  `feedId` parameter in `POST /feed/{feedId}`
            DeleteFeed:
              operationRef: deleteFeed
              parameters:
                feedId: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the  `feedId` parameter in `DELETE /feed/{feedId}`
        "409":
          description: A feed already exists with the specified ID.
        "422":
          description: Validation error.
        "5XX":
          description: Unexpected error.
      x-openapi-router-controller: cavl_server.controllers.feed_controller
  /feed/{feedId}:
    get:
      tags:
        - feed
      summary: Gets a feed by ID
      description: Returns a single feed config
      operationId: get_feed
      parameters:
        - name: feedId
          in: path
          description: The ID of feed to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feed"
        "400":
          description: Bad request. The specified feed ID is invalid (not a number).
        "404":
          description: A feed with the specified ID was not found.
        "5XX":
          description: Unexpected error.
      x-openapi-router-controller: cavl_server.controllers.feed_controller
    post:
      tags:
        - feed
      summary: Updates an existing feed with the specified ID with form data
      operationId: update_feed_with_form
      parameters:
        - name: feedId
          in: path
          description: The ID of feed to update
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/body"
      responses:
        "204":
          description: The feed was updated.
        "400":
          description: Bad request. The specified feed ID is invalid (not a number).
        "404":
          description: A feed with the specified ID was not found.
        "422":
          description: Validation error.
        "5XX":
          description: Unexpected error.
      x-openapi-router-controller: cavl_server.controllers.feed_controller
    delete:
      tags:
        - feed
      summary: Deletes the feed with the specified ID
      operationId: delete_feed
      parameters:
        - name: feedId
          in: path
          description: The ID of the feed to delete
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "204":
          description: The feed was deleted.
        "400":
          description: Bad request. The specified feed ID is invalid (not a number).
        "404":
          description: A feed with the specified ID was not found.
        "5XX":
          description: Unexpected error.
      x-openapi-router-controller: cavl_server.controllers.feed_controller
  /validate:
    post:
      tags:
        - validate
      summary: Creates a validation task to validate a feed
      operationId: validate_feed
      requestBody:
        $ref: "#/components/requestBodies/ValidationTaskResult"
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationTaskResult"
        "400":
          description: Bad request. The specified task ID is invalid (not a number).
        "404":
          description: A task with the specified ID was not found.
        "422":
          description: Validation error.
        "5XX":
          description: Unexpected error.
      x-openapi-router-controller: cavl_server.controllers.validate_controller
components:
  schemas:
    Feed:
      type: object
      properties:
        id:
          type: integer
        publisherId:
          type: integer
        url:
          type: string
          format: uri
        username:
          type: string
        password:
          type: string
          format: password
          writeOnly: true
        status:
          type: string
          description: Feed Consumer Status
          readOnly: true
          default: DEPLOYING
          enum:
            - DEPLOYING
            - SYSTEM_ERROR
            - FEED_UP
            - FEED_DOWN
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      example:
        publisherId: 6
        password: ""
        created: 2000-01-23T04:56:07.000+00:00
        modified: 2000-01-23T04:56:07.000+00:00
        id: 0
        url: http://example.com/aeiou
        username: username
        status: DEPLOYING
    ValidationTaskResult:
      type: object
      properties:
        url:
          type: string
          format: uri
        username:
          type: string
          format: string
        password:
          type: string
          format: password
          writeOnly: true
        status:
          type: string
          readOnly: true
          default: DEPLOYING
          enum:
            - DEPLOYING
            - SYSTEM_ERROR
            - FEED_VALID
            - FEED_INVALID
        created:
          type: string
          format: date-time
          readOnly: true
      example:
        password: ""
        created: 2000-01-23T04:56:07.000+00:00
        url: http://example.com/aeiou
        username: username
        status: DEPLOYING
    inline_response_201:
      type: object
      properties:
        id:
          type: integer
          description: ID of the created feed.
      example:
        id: 0
    body:
      type: object
      properties:
        url:
          type: string
          description: Updated url of the feed
        username:
          type: string
          description: Updated username used to authenticate access to the SIRI feed
        password:
          type: string
          description: Updated password used to authenticate access to the SIRI feed
  requestBodies:
    Feed:
      description: Feed object that needs to be added to the consumer config
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Feed"
      required: true
    ValidationTaskResult:
      description:
        ValidationTaskResult object that indicates the validity of the
        feed
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ValidationTaskResult"
      required: true
