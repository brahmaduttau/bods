# Generated by Django 2.1.3 on 2019-02-21 11:53

from django.conf import settings
from django.db import migrations


"""
The site now uses django-hosts to split the app into separate sites. The config/host.py routes the request based on
the subdomain. This data migration allows each subdomain to be mapped to a record in the Site table

    see https://django-hosts.readthedocs.io/en/latest/callbacks.html#django_hosts.callbacks.host_site
    for how this works in the hosts.py file

The Site domains are constructed using PARENT_HOST and [ROOT|DATA|PUBLISH|ADMIN]_SUBDOMAIN settings. If this migration
has already been executed in your environment and you want to change the subdomain on which each site is served, then
you can update the Site domain to match the setting directly in the admin interface.
"""


def update_site_forward(apps, schema_editor):
    """Set site domain and name."""
    Site = apps.get_model("sites", "Site")
    Site.objects.update_or_create(
        id=1,
        defaults={
            "domain": f"{settings.ROOT_SUBDOMAIN}.{settings.PARENT_HOST}",
            "name": "Bus Open Data Service",
        },
    )
    Site.objects.update_or_create(
        id=2,
        defaults={
            "domain": f"{settings.DATA_SUBDOMAIN}.{settings.PARENT_HOST}",
            "name": "Find Open Data Service",
        },
    )
    Site.objects.update_or_create(
        id=3,
        defaults={
            "domain": f"{settings.PUBLISH_SUBDOMAIN}.{settings.PARENT_HOST}",
            "name": "Publish Open Data Service",
        },
    )
    Site.objects.update_or_create(
        id=4,
        defaults={
            "domain": f"{settings.ADMIN_SUBDOMAIN}.{settings.PARENT_HOST}",
            "name": "Bus Open Data Service (Internal)",
        },
    )


def update_site_backward(apps, schema_editor):
    """Revert site domain and name to default."""
    Site = apps.get_model("sites", "Site")
    Site.objects.exclude(id=settings.ROOT_SITE_ID).delete()
    Site.objects.update_or_create(
        id=settings.ROOT_SITE_ID,
        defaults={"domain": "example.com", "name": "Bus Open Data Service"},
    )


class Migration(migrations.Migration):
    dependencies = [("sites", "0003_set_site_domain_and_name")]

    operations = [migrations.RunPython(update_site_forward, update_site_backward)]
