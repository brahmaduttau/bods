on:
  push:
    branches:
      - IGH-577-unit-test-execution

env:
  ECR_REPOSITORY_NAME: ${{ vars.ECR_REPOSITORY }}
  ECR_DJANGO_BASE_REPOSITORY_NAME: ${{ vars.ECR_DJANGO_BASE_REPOSITORY }}
  ECR_NODE_BASE_REPOSITORY_NAME: ${{ vars.ECR_NODE_BASE_REPOSITORY }}
  ENVIRONMENT_NAME: dev


jobs:
  check-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
  
      - id: set-version-number
        run: |
          TEXT=$(cat ./version.txt)
          echo "version=${TEXT//'%'/'%25'}" >> $GITHUB_OUTPUT
  
      - id: echo-version
        run: |
          echo ${{ steps.set-version-number.outputs.version }}

      - name: Sanitise branch name
        id: sanitise_branch_name
        run: |
          branch=${{ github.head_ref || github.ref_name }}
          echo "branch=${branch//\//-}" | tr '[:upper:]' '[:lower:]' >> $GITHUB_OUTPUT

      - name: Update Django
        id: "update_django"
        uses: "./.github/workflows/templates/build_django"
        with:
          ecr_registry: ${{ steps.login-ecr.outputs.registry }}
          node_base_repository: node_base_unit_test
          django_base_repository: django_base_unit_test
          django_repository: django_unit_test
          docker_tag: ${{ steps.sanitise_branch_name.outputs.branch }}

      - name: Unit Test
        id: unit_test
        run: |
          docker run --entrypoint env --env-file ./config/.env.nodocker.template --user root ${{ steps.login-ecr.outputs.registry }}/django_unit_test:${{ steps.sanitise_branch_name.outputs.branch  }} /bin/sh -c "poetry install; pytest"
